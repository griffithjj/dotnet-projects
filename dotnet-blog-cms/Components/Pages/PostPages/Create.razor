@page "/posts/create"

@using Microsoft.EntityFrameworkCore
@using BlogCms.Models
@using Microsoft.AspNetCore.Components
@inject IDbContextFactory<BlogCms.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Post" OnValidSubmit="AddPost" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label>
                <InputText id="title" @bind-Value="Post.Title" class="form-control" />
                <ValidationMessage For="() => Post.Title" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="summary" class="form-label">Summary:</label>
                <InputText id="summary" @bind-Value="Post.Summary" class="form-control" />
                <ValidationMessage For="() => Post.Summary" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="content" class="form-label">Content:</label>
                <InputText id="content" @bind-Value="Post.Content" class="form-control" />
                <ValidationMessage For="() => Post.Content" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="created" class="form-label">Created:</label>
                <InputDate id="created" @bind-Value="Post.Created" class="form-control" />
                <ValidationMessage For="() => Post.Created" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="lastupdated" class="form-label">LastUpdated:</label>
                <InputDate id="lastupdated" @bind-Value="Post.LastUpdated" class="form-control" />
                <ValidationMessage For="() => Post.LastUpdated" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/posts">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Post Post { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddPost()
    {
        using var context = DbFactory.CreateDbContext();
        context.Posts.Add(Post);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/posts");
    }
}
